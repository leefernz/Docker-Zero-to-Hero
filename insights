Multistage Docker build :

# Stage 1: Build the application
FROM maven:3.9.6-eclipse-temurin-17 AS build
WORKDIR /app

# Copy pom.xml and download dependencies first (better caching), here . is WORKDIR(Copy local pom.xml → /app/pom.xml inside container)
COPY pom.xml .
RUN mvn dependency:go-offline -B

# Copy project source and package it. (Copy local src → /app/src inside container)
COPY src ./src 
RUN mvn clean package -DskipTests

# Stage 2: Create a minimal runtime image (not distroless, Alpine-based, meaning it includes a small Linux OS)
FROM eclipse-temurin:17-jre-alpine 
WORKDIR /app

# Copy jar from build container, Rename it to app.jar, Place it in current directory (WORKDIR /app) of final stage
COPY --from=build /app/target/*.jar app.jar

# Expose application port (update if needed)
EXPOSE 8080

# Run app
ENTRYPOINT ["java","-jar","app.jar"]
